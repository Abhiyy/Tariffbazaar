@model IEnumerable<DA.AppBanwao.TariffBazaar.Models.Item>
@using GridMvc.Html 
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.min.js"></script>

<div class="row" >
    <div class="col-xs-12">
        @if (User.IsInRole("Customer"))
        { 
         <h2>Your items</h2>
        }else{
 <h2>Items on rent</h2>
        }
        <div class="row">
            <div class="col-xs-12">
                <div class="grid">
                @Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add(c => c.Name).Titled("Name").Filterable(true);
                       
                        
                        columns.Add(c => c.Rent).Titled("Rent");
                       
                        columns.Add(c => c.Approved).Titled("Ad Approved");
                        columns.Add(c => c.UpdatedOn).Titled("Last Updated On");
                        if (User.IsInRole("Admin"))
                        {
                            columns.Add(c => c.UserName).Titled("User").SetWidth(10);
                        }
                        
                                columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(o => @<a href="@Url.Action("Details", "RentItem", new { id = o.RentItemId })" class="btn btn-default btn-xs"> Details <i class="fa fa-search-plus"></i> </a>);
                columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(o => @<a href="@Url.Action("Edit", "RentItem", new { id = o.RentItemId })" class="btn btn-primary btn-xs"> Edit <i class="fa fa-pencil-square-o"></i> </a>);
        }).WithPaging(10).Sortable(true)
            </div>
                </div>
        </div>          
    </div>
    </div>